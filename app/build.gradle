plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.devtools.ksp' version '1.8.10-1.0.9'
}

android {
    compileSdk 33
    namespace 'xyz.teamgravity.notepad'

    defaultConfig {
        applicationId "xyz.teamgravity.notepad"
        minSdk 21
        targetSdk 33
        versionCode 11
        versionName "1.1.8"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }

        ndk {
            debugSymbolLevel 'FULL'
        }

        bundle {
            language {
                enableSplit = false
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.4.2"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    applicationVariants.all { variant ->
        kotlin.sourceSets {
            getByName(variant.name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    signingConfigs {
        release {
            Properties properties = new Properties()
            properties.load(project.rootProject.file("local.properties").newDataInputStream())

            storeFile file(properties.getProperty("storeFile", ""))
            storePassword properties.getProperty("storePassword", "")
            keyAlias properties.getProperty("keyAlias", "")
            keyPassword properties.getProperty("keyPassword", "")
        }
    }
}

dependencies {

    // core
    implementation 'androidx.core:core-ktx:1.9.0'

    // compose ui
    implementation "androidx.compose.ui:ui:1.4.0-beta02"

    // compose preview
    implementation "androidx.compose.ui:ui-tooling-preview:1.4.0-beta02"

    // compose activity
    implementation 'androidx.activity:activity-compose:1.6.1'

    // compose viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    // compose hilt navigation
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // compose material3
    implementation 'androidx.compose.material3:material3:1.1.0-alpha07'

    // compose constraint layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'

    // compose icons
    implementation "androidx.compose.material:material-icons-extended:1.4.0-beta02"

    // lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    // hilt
    implementation 'com.google.dagger:hilt-android:2.45'
    kapt 'com.google.dagger:hilt-compiler:2.45'

    // firebase
    implementation platform('com.google.firebase:firebase-bom:31.2.3')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging'

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    // room
    implementation "androidx.room:room-runtime:2.5.0"
    implementation "androidx.room:room-ktx:2.5.0"
    kapt "androidx.room:room-compiler:2.5.0"

    // datastore preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // compose destinations
    implementation 'io.github.raamcosta.compose-destinations:core:1.8.35-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.8.35-beta'

    // timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // pin lock compose
    implementation 'com.github.raheemadamboev:pin-lock-compose:1.0'
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    "-opt-in=androidx.compose.material3.ExperimentalMaterial3Api",
                    "-opt-in=androidx.compose.foundation.ExperimentalFoundationApi"
            ]
        }
    }
}